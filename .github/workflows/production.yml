name: 本番環境へのデプロイ

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: AWS認証情報の設定
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets['AWS_ACCESS_KEY_ID'] }}
        aws-secret-access-key: ${{ secrets['AWS_SECRET_ACCESS_KEY'] }}
        aws-region: ap-northeast-1
    
    - name: Amazon ECRへのログイン
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Dockerイメージのビルド
      run: |
        ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
        ECR_REPOSITORY="cas-api"
        IMAGE_TAG="${{ github.sha }}"
        docker build -t "${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" -t "${ECR_REGISTRY}/${ECR_REPOSITORY}:latest" .
    
    - name: Dockerイメージのプッシュ
      id: push-image
      run: |
        ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
        ECR_REPOSITORY="cas-api"
        IMAGE_TAG="${{ github.sha }}"
        docker push "${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
        docker push "${ECR_REGISTRY}/${ECR_REPOSITORY}:latest"
        echo "image=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_OUTPUT
    
    - name: 現在のタスク定義を取得
      id: get-task-def
      run: |
        aws ecs describe-task-definition --task-definition cas-api-task --query taskDefinition > task-definition.json
    
    - name: タスク定義を更新
      id: update-task-def
      run: |
        # イメージを更新
        jq '.containerDefinitions[0].image = "${{ steps.push-image.outputs.image }}"' task-definition.json > updated-task-definition.json
        mv updated-task-definition.json task-definition.json
        
        # 環境変数を追加
        jq '.containerDefinitions[0].environment = [
          {"name": "DATABASE_URL", "value": "${{ secrets.DATABASE_URL }}"},
          {"name": "FRONTEND_URL", "value": "${{ secrets.FRONTEND_URL }}"},
          {"name": "LINE_LOGIN_CHANNEL_ID", "value": "${{ secrets.LINE_LOGIN_CHANNEL_ID }}"},
          {"name": "LINE_LOGIN_CHANNEL_SECRET", "value": "${{ secrets.LINE_LOGIN_CHANNEL_SECRET }}"},
          {"name": "LINE_CHANNEL_ACCESS_TOKEN", "value": "${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}"},
          {"name": "LINE_CHANNEL_SECRET", "value": "${{ secrets.LINE_CHANNEL_SECRET }}"},
          {"name": "REDIRECT_URI", "value": "${{ secrets.REDIRECT_URI }}"},
          {"name": "SECRET_KEY", "value": "${{ secrets.SECRET_KEY }}"},
          {"name": "ALGORITHM", "value": "${{ secrets.ALGORITHM }}"},
          {"name": "REFRESH_SECRET_KEY", "value": "${{ secrets.REFRESH_SECRET_KEY }}"},
          {"name": "ACCESS_TOKEN_EXPIRE_MINUTES", "value": "${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}"},
          {"name": "REFRESH_TOKEN_EXPIRE_DAYS", "value": "${{ secrets.REFRESH_TOKEN_EXPIRE_DAYS }}"},
          {"name": "OPENAI_API_KEY", "value": "${{ secrets.OPENAI_API_KEY }}"},
          {"name": "MICROCMS_API_URL", "value": "${{ secrets.MICROCMS_API_URL }}"},
          {"name": "MICROCMS_API_KEY", "value": "${{ secrets.MICROCMS_API_KEY }}"},
          {"name": "STRIPE_SECRET_KEY", "value": "${{ secrets.STRIPE_SECRET_KEY }}"},
          {"name": "STRIPE_PUBLISHABLE_KEY", "value": "${{ secrets.STRIPE_PUBLISHABLE_KEY }}"},
          {"name": "STRIPE_WEBHOOK_SECRET", "value": "${{ secrets.STRIPE_WEBHOOK_SECRET }}"},
          {"name": "DATABASE_URL", "value": "${{ secrets.DATABASE_URL }}"},
          {"name": "AWS_ACCESS_KEY_ID", "value": "${{ secrets.AWS_ACCESS_KEY_ID }}"},
          {"name": "AWS_SECRET_ACCESS_KEY", "value": "${{ secrets.AWS_SECRET_ACCESS_KEY }}"},
          {"name": "SECRET_KEY", "value": "${{ secrets.SECRET_KEY }}"},
          {"name": "AWS_S3_BUCKET_NAME", "value": "${{ secrets.AWS_S3_BUCKET_NAME }}"},
          {"name": "AWS_S3_REGION", "value": "${{ secrets.AWS_S3_REGION }}"}
        ]' task-definition.json > updated-task-definition.json
        mv updated-task-definition.json task-definition.json
        
        # タスク定義からAWSが管理するフィールドを削除
        jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-definition.json > cleaned-task-definition.json
        mv cleaned-task-definition.json task-definition.json
    
    - name: Amazon ECSへのデプロイ
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: task-definition.json
        service: cas-api-service
        cluster: cas-api-cluster
        wait-for-service-stability: true
